public class AllowAccessActivity extends AppCompatActivity {
    
    
    public static final int CAMERA_REQUEST=123;
    public static final int REQUEST_PERMISSION_SETTING=1234;
    Button allowAccessBtn;
    
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_allow_access);
        
        
        
        
        getSupportActionBar().hide();
        allowAccessBtn=findViewById(R.id.allowAccessBtn);

        allowAccessBtn.setOnClickListener(v -> {
            permission();
        });







    }
    private void permission() {
        if (ContextCompat.checkSelfPermission(getApplicationContext(),
                Manifest.permission.CAMERA)== PackageManager.PERMISSION_GRANTED){
            startActivity(new Intent(AllowAccessActivity.this, MainActivity.class));
            finish();
        }else {
            ActivityCompat.requestPermissions(AllowAccessActivity.this,
                    new String[]{Manifest.permission.CAMERA}, CAMERA_REQUEST);
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        if (requestCode == CAMERA_REQUEST){
            for (int i = 0; i < permissions.length; i++){
                String per = permissions[i];
                if (grantResults[i] == PackageManager.PERMISSION_DENIED){

                    boolean showRationale = shouldShowRequestPermissionRationale(per);
                    if (!showRationale){
                        // user clicked on never ask again
                        AlertDialog.Builder builder = new AlertDialog.Builder(this);
                        builder.setTitle("App Permission")
                                .setMessage("For Flash Light App, You must allow this app to access Flash Light on your device"
                                +"\n\n"+"Now follow the below steps"+"\n\n"+
                                        "Open Setting from below button"+"\n"
                                +"Click on Permissions"+"\n"+"Allow access for Camera")
                                .setPositiveButton("Open Settings", new DialogInterface.OnClickListener() {
                                    @Override
                                    public void onClick(DialogInterface dialog, int which) {
                                        Intent intent =new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
                                        Uri uri = Uri.fromParts("package",getPackageName(),null);
                                        intent.setData(uri);
                                        startActivityForResult(intent,REQUEST_PERMISSION_SETTING);
                                    }
                                }).create().show();
                    }else {

                        ActivityCompat.requestPermissions(AllowAccessActivity.this,
                                new String[]{Manifest.permission.CAMERA}, CAMERA_REQUEST);

                    }
                }
            }
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        if (checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED){
            startActivity(new Intent(AllowAccessActivity.this,MainActivity.class));
            finish();
        }
    }
}
